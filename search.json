[
  {
    "objectID": "system_request.html",
    "href": "system_request.html",
    "title": "System Request",
    "section": "",
    "text": "Request Creator\n\nJacob Morrison\n\n\n\nProject Sponsor\nDr. Erik Fredericks\n\n\nBusiness Need\nThis project exists to improve the efficiency of quality control of DNA sequencing experiments by merging multiple steps of the process into a single executable.\n\n\nBusiness Requirements\n\nMerge coverage determination and statistical calculations\nUse multithreading to improve efficiency\nIntegrate process within existing toolkit\n\n\n\nBusiness Value\nI expect this project will reduce the time it takes to run the full quality control script, thereby decreasing the time it takes to complete the initial analysis. Further, this reduction in time will benefit clinical users, who often work in environments with limited resources and tight timelines.\n\n\nSpecial Issues or Constraints\n\nProject will be as a standalone tool before being integrated into existing toolkit\nPotential issue: Merging data from individual threads\nPotential issue: Allowing user to process a subset of data",
    "crumbs": [
      "System Request"
    ]
  },
  {
    "objectID": "diagrams.html",
    "href": "diagrams.html",
    "title": "Diagrams",
    "section": "",
    "text": "Use Case Diagrams\n\n\n\nUse Case Diagram 1: Command Line Interface\n\n\n\n\n\nUse Case Diagram 2: Processing\n\n\n\n\nActivity Diagrams\n \n\n\n\nActivity Diagram 2: Command Line Interface",
    "crumbs": [
      "Diagrams (Use Case, Activity)"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Genomic Coverage from Whole Genome Bisulfite Sequencing Data",
    "section": "",
    "text": "Description\nDNA sequencing is a common practice in biomedical research. The sequencing process requires collecting DNA from a sample (e.g., a tumor biopsy or a healthy tissue nearby), extracting the DNA from the cells, and then fragmenting the full length DNA strands into smaller chunks. These chunks are then placed on a “sequencer,” where the individual bases are read from the DNA fragments. The output from the sequencer is called a “read” and is then aligned back to a reference genome (the human reference genome is about three billion bases long) in order to find where the small fragment (usually around 100-150 bases in length) came from.\nOne possible analysis that can be done is to find the “coverage” across the entire genome. To do this, you count the total number of reads that cover each individual loci, or base, in the genome. One example of performing this analysis is as a part of a quality control pipeline within BISCUIT to verify a sequencing experiment consistently covered the entire genome. Currently, the pipeline uses bedtools to do this, but it is a slow process. One option for improving the speed of this process would be to use mosdepth, a tool specifically designed for finding coverages. However, it does not calculate the exact metrics needed in the BISCUIT quality control pipeline.\nThis project improves upon the existing bedtools implementation by calculating the needed metrics on the fly and utilizing parallelization during processing. The tool is written in C for plugging in to BISCUIT following its completion.\n\n\nDeliverables\n\nSystem Request\nDiagrams (Use Case, Activity)",
    "crumbs": [
      "Home"
    ]
  }
]